{% extends 'control-panel/index.html.twig'%}

{% block header %}{% endblock %}

{% block content %}
    <style>
        html, body {
            overflow: hidden;
            margin: 0;
            padding: 0;
        }
    </style>
    <div class="container-fluid vh-100">
        <div class="row d-flex flex-row flex-nowrap">
            <div
                id="cp-panel-left"

                class="
                    bg-light
                    scroll-primary
                    col-md-4
                    col-lg-3
                    min-vh-100
                    position-relative
                    pe-2
                    p-0
                "
            >
                <div class="d-flex flex-column align-items-start h-100">
                    <div
                        class="d-flex flex-row w-100 px-1 py-0 bg-dark justify-content-between"
                    >
                        <div>
                            <button
                                id="sidebar--nav-top-btn-icon-cancel"
                                type="button"
                                class="
                                    sidebar--nav-top-btn
                                    btn
                                    btn-dark
                                    m-0
                                    border-0
                                    shadow-none
                                    rounded-0
                                    p-3
                                "
                                data-click-target="#{{ builderForm.cancelBtn.vars.id }}"
                                title="Cancel"
                            >
                                <svg class="bi bi-1"><use xlink:href="#icon-cancel"/></svg>
                            </button>
                            <button
                                id="sidebar--nav-top-btn-icon-back"
                                type="button"
                                class="
                                    sidebar--nav-top-btn
                                    btn
                                    btn-dark
                                    m-0
                                    border-0
                                    shadow-none
                                    rounded-0
                                    p-3
                                "
                                data-click-target="#{{ builderForm.backBtn.vars.id }}"
                                title="Back"
                            >
                                <svg class="bi bi-1"><use xlink:href="#icon-back"/></svg>
                                Back
                            </button>
                        </div>

                        <div>
                            <button
                                id="sidebar--nav-top-btn-icon-preview"
                                type="button"
                                class="
                                    sidebar--nav-top-btn
                                    btn
                                    btn-dark
                                    m-0
                                    border-0
                                    shadow-none
                                    rounded-0
                                    p-3
                                "
                                data-click-target="#{{ builderForm.previewBtn.vars.id }}"
                                title="Preview"
                            >
                                Preview
                            </button>
                            <button
                                id="sidebar--nav-top-btn-icon-save"
                                type="button"
                                class="
                                    sidebar--nav-top-btn
                                    btn
                                    btn-dark
                                    m-0
                                    border-0
                                    shadow-none
                                    rounded-0
                                    p-3
                                "
                                data-click-target="#{{ builderForm.saveBtn.vars.id }}"
                                title="Save"
                            >
                                <svg class="bi bi-1"><use xlink:href="#icon-save"/></svg>
                                Save
                            </button>
                        </div>

                    </div>

                    <div
                        class="d-flex align-items-start w-100 h-100"
                    >
                        <div
                            id="tools-icon"
                            class="tools-icon nav flex-column nav-pills bg-dark h-100"
                            role="tablist"
                            aria-orientation="vertical"
                        >
                            {% for sidebarTab in sidebar %}
                                <button
                                    class="
                                    sidebar--nav-left-btn
                                    pb-2
                                    w-100
                                    btn
                                    btn-dark
                                    border-0
                                    rounded-0
{#                                    border-0#}
{#                                    text-white#}
                                    text-center
                                    {% if loop.index == 1 %}active{% endif %}
                                "
                                    id="{{ sidebarTab.id }}-tab"
                                    data-bs-toggle="pill"
                                    data-bs-target="#{{ sidebarTab.id }}"
                                    type="button"
                                    role="tab"
                                    aria-controls="{{ sidebarTab.id }}"
                                    aria-selected="true"
                                >
                                    <svg class="bi bi-1"><use xlink:href="#icon-{{ sidebarTab.id }}"/></svg>
                                    <br>
                                    <span class="icon-text">{{ sidebarTab.name }}</span>
                                </button>
                            {% endfor %}

                            <button
                                class="sidebar--nav-left-btn btn border-0 text-white pb-2 d-none"
                                id="sidebar--save-tab"
                                data-bs-toggle="pill"
                                data-bs-target="#sidebar--save"
                                type="button"
                                role="tab"
                                aria-controls="sidebar--save"
                                aria-selected="true"
                            >
                                <svg class="bi bi-1"><use xlink:href="#icon-sidebar--save"/></svg>
                                <br>
                                <span class="icon-text">Save</span>
                            </button>
                        </div>

                        {{ form_start(builderForm, {'method': 'POST',
                            'attr': {
                                'id': builderForm.vars.id,
                                'class': 'tab-content bg-light h-100 w-100 p-1 pe-0'
                            }
                        }) }}
                        {% for sidebarTab in sidebar %}
                            <div
                                id="{{ sidebarTab.id }}"
                                class="
                                    tab-pane
                                    fade
                                    show
                                    overflow-y-auto
                                    vh-100
                                    pe-2
                                    {% if loop.index == 1 %}active{% endif %}
                                "
                                role="tabpanel"
                                aria-labelledby="{{ sidebarTab.id }}-tab"
                            >
                                {% include sidebarTab.path with {'form': builderForm } only %}
                            </div>
                        {% endfor %}

                        <div
                            id="sidebar--save"
                            class="
                                    tab-pane
                                    fade
                                    show
                                    overflow-y-auto
                                    vh-100
                                    pe-2
                                    d-none
                                "
                            role="tabpanel"
                            aria-labelledby="sidebar--save-tab"
                        >
                            <div class="d-flex flex-column justify-content-center mt-3">
                                {{ form_row(builderForm.cancelBtn) }}

                                {{ form_row(builderForm.backBtn) }}

                                <div>

                                    {{ form_row(builderForm.saveBtn) }}
                                </div>

                                {{ form_row(builderForm.previewBtn) }}
                            </div>
                        </div>
                        {{ form_end(builderForm) }}
                    </div>
                </div>

                <div
                    id="cp-gutter"
                    class="gutter bg-secondary"
                >
                </div>
            </div>

            <div
                id="cp-panel-right"

                class="
                    col-md-8
                    col-lg-9
                    p-0
                    overflow-hidden
                    d-flex
                    flex-column
                    align-items-start
                "
            >
                <div
                    class="
                        w-100
                        bg-dark
                        w-100
                        px-1
                        py-0
                    "
                >
                    <button
                        id="toolbar-top-btn-icon-sections-highlight-active"
                        type="button"

                        class="
                            sidebar--nav-top-btn
                            btn
                            btn-dark
                            m-0
                            border-0
                            shadow-none
                            rounded-0
                            p-3
                        "

                        data-click-target=""
                        title="Cancel"
                    >
                        Highlight active section
                    </button>
                </div>
                <iframe
                    id="preview-frame"
                    class="
                        scroll-primary
                        w-100
                        vh-100
                        overflow-auto
                        border-0
                    "
                    src="{{ absolute_url(path('cp_variant_preview', {'variant': variant.id})) }}"
                    title="preview">
                </iframe>

            </div>

        </div>
    </div>

    <div class="d-none">
        <button
            id="initiate_media_loading_on_page_load"
            class="media-loader"
        ></button>

        <div id="modal-media-img-template" class="d-none">
            <div
                class="img img-background square-10 mt-2"
            ></div>
        </div>
    </div>

{% endblock %}

{% block scriptsbottom %}
<script type="application/javascript">
    const mediaLibrary = {};
    const mediaLibraryOrder = [];
    // lock requests if already ran. lock if limit exceed. unlock if uploaded new media.
    const mediaLibraryConfig = {
        'lock': false,
        'loadOffset': 0,
        'loadLimit': 9,
        'viewLimit': 6,
        'viewPage': 0,
        'baseUri': '{{ absolute_url(path('api_media_list_my')) }}'
    };

    const leftPane = document.getElementById("cp-panel-left");
    const rightPane = document.getElementById("cp-panel-right");
    const gutter = document.getElementById("cp-gutter");

    async function loadMedias(me) {
        let loader = me;

        if (!mediaLibraryConfig.lock) {
            mediaLibraryConfig.lock = true;
            const uri = mediaLibraryConfig.baseUri  + '/' + mediaLibraryConfig.loadLimit + '/' + mediaLibraryConfig.loadOffset;

            loader.toggleClass('disabled btn-loading');
            loader.attr('disabled', false);

            await $.getJSON({
                url: uri,
            })
                .done(function(response) {
                    if (response.type !== undefined) {
                        if (response.type === 'media') {
                            setMedias(response.data);
                        } else {
                            console.log('trying to find undefined content type.');
                        }
                    }

                    mediaLibraryConfig.loadOffset += mediaLibraryConfig.loadLimit;

                })
                .always(function(response) {
                    loader.toggleClass('disabled btn-loading');
                    loader.removeAttr('disabled');
                    let len = response.data.length;
                    if (len === undefined) {
                        len = Object.keys(response.data).length;
                    }
                    if (len < mediaLibraryConfig.loadLimit) {
                        mediaLibraryConfig.lock = true;
                        if (me.hasClass('btn-load-more')) {
                            me.toggle('d-none');
                        }
                    } else {
                        mediaLibraryConfig.lock = false;
                    }
                })
                .fail(function(response) {toastServerError(response)})
        }
    }

    function renderMediaList(me, library, libraryOrder, libraryConfig, direction = 1) {
        direction = parseInt(me.attr('data-direction') ?? direction);
        direction = direction > 0 ? 1 : -1;
        const mediasLength = libraryOrder.length;
        const maxPages = Math.ceil(mediasLength / libraryConfig.viewLimit);

        libraryConfig.viewPage += direction;

        if (libraryConfig.viewPage >= maxPages) {
            libraryConfig.viewPage = maxPages - 1;
        } else if (libraryConfig.viewPage < 1) {
            libraryConfig.viewPage = 0;
        }

        let offset = libraryConfig.viewLimit * libraryConfig.viewPage;

        let end = offset + libraryConfig.viewLimit;
        if (end > mediasLength) {
            end = mediasLength;
        }

        let medias = libraryOrder.slice(offset, end);

        const pagesBehind = libraryConfig.viewPage;
        const pagesAhead = maxPages - libraryConfig.viewPage - 1;
        $(me.attr('data-btn-prev') + ' .media-arrow-page-numbers').text(pagesBehind > 0 ? pagesBehind : '');
        $(me.attr('data-btn-next') + ' .media-arrow-page-numbers').text(pagesAhead > 0 ? pagesAhead : '');

        if (medias.length > 0) {
            const targetContent = $(me.attr('data-content-target'));

            const template = $("#modal-media-img-template").html();
            targetContent.html('');

            $.each(medias, function(key, mediaId) {
                const el = $(template).css('background-image', 'url(' + library[mediaId].url + ')')
                    .on('click', function(event) {
                        const me = $(this);
                        const parent = me.parent();
                        const targetClick = $(parent.attr('data-click-target'));
                        const mediaIdField = $(parent.attr('data-media-id-field'));
                        // const targetClickMask = $(parent.attr('data-click-target-mask'));

                        mediaIdField.attr('value', mediaId);
                        // targetClickMask.attr('value', true);
                        console.log(mediaIdField.attr('value'));
                        targetClick.trigger('click');
                    });
                targetContent.append(el);
            });
        }
    }

    function setMedias(data)
    {
        $.each(data, function (key, obj) {
            mediaLibrary[key] = obj;
            mediaLibraryOrder[obj.order] = key;
        });
    }

    function resizer(e) {
        window.addEventListener('mousemove', mousemove);
        window.addEventListener('mouseup', mouseup);

        let prevX = e.x;
        const leftPanel = leftPane.getBoundingClientRect();
        const rightPanel = rightPane.getBoundingClientRect();

        function mousemove(e) {
            let newX = e.x - prevX;

            if (leftPanel.width + newX < 200) {
                return;
            }
            leftPane.style.width = leftPanel.width + newX + "px";
            rightPane.style.width = rightPanel.width - newX + "px";

        }

        function mouseup() {
            window.removeEventListener('mousemove', mousemove);
            window.removeEventListener('mouseup', mouseup);
        }
    }

    gutter.addEventListener('mousedown', resizer);

    $('.formSubmit').on('click', function(event, data) {
        event.preventDefault();
        const me = $(this);
        let loader = me;
        if (data !== undefined && data.loader !== undefined) {
            loader = data.loader;
        }

        loader.toggleClass('disabled btn-loading');
        loader.attr('disabled', false);

        const form = $('#{{ builderForm.vars.id }}');

        const myId = me.prop('id');
        const targetId = myId.replace('removeBtn', 'toRemove')
            .replace('generateBtn', 'toGenerate')
            .replace('getFromStockBtn', 'toGetFromStock')
            .replace('getFromCatalogBtn', 'toSetFromCatalog')
            .replace('saveBtn', 'toSave')
            .replace('previewBtn', 'toPreview')
        ;

        const hiddenInput = $('#' + targetId);

        hiddenInput.prop('value', true);
        const formData = form.serialize();

        $.ajax({
            type: form.prop('method'),
            url: form.prop('action') + '/ajax',
            data: formData,
        })
            .done(function() {
                document.getElementById('preview-frame').contentWindow.location.reload();
            })
            .always(function() {
                hiddenInput.prop('value', false);
                loader.toggleClass('disabled btn-loading');
                loader.removeAttr('disabled');
            })
            .fail(function(response) {toastServerError(response)})
        ;

        return false; // avoid to execute the actual submit of the form.
    })

    // form submit
    $('.sidebar--nav-top-btn, .modal--nav-media-btn, .modal--tab-media-btn').on('click', function(event, data) {
        event.preventDefault();

        const me = $(this);
        let loader = me;

        const targetClick = me.attr('data-click-target');
        if (targetClick !== undefined) {
            if (data !== undefined && data.loader !== undefined) {
                loader = data.loader;
            }

            $(targetClick).trigger('click', {'loader' : loader});
        }

        return false;
    })

    // find content
    $('.media-loader').on('click', function(event, data) {
        event.preventDefault();

        const me = $(this);
        loadMedias(me).then((r) => renderMediaList(me, mediaLibrary, mediaLibraryOrder, mediaLibraryConfig));


        return false;
    })

    // find content
    $('.modal--tab-media-btn-prev, .modal--tab-media-btn-next, .sidebar--btn-media-open-modal').on('click', function(event, data) {
        event.preventDefault();

        const me = $(this);
        renderMediaList(me, mediaLibrary, mediaLibraryOrder, mediaLibraryConfig);

        return false;
    })

    $(document).ready(function() {
        //load first images to modal media library
        $('#initiate_media_loading_on_page_load').trigger('click');
    });
</script>
{% endblock %}
