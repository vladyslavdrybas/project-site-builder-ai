<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}{% if meta is defined and meta.title is defined %}{{ meta.title }}{% elseif title is defined %}{{ title }}{% else %}Welcome{% endif %}{% endblock %}</title>

    {% if meta is defined %}
        {% include 'landing-page/meta.html.twig' %}
    {% endif %}

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="{{ absolute_url(asset('use-bootstrap-tag.min.css', 'css')) }}">
    <link rel="stylesheet" href="{{ absolute_url(asset('highlight.default.min.css', 'css')) }}">
    <link rel="stylesheet" href="{{ absolute_url(asset('css/bootstrap-icons.min.css', 'bootstrap')) }}">
    <link rel="stylesheet" href="{{ absolute_url(asset('css/bootstrap.min.css', 'bootstrap')) }}">
    <link rel="stylesheet" href="{{ absolute_url(asset('style.css?t=' ~ 'now'|date('Y-m-d-H-i'), 'css')) }}">

    {% block headstylesheets %}
    {% endblock %}
</head>

<body class="bg-light">

{% include'icons.html.twig' %}

<div id="home"></div>

{% block header %}
<div id="header" class="fixed-top z-3">
    {% include "landing-page/components/sections/header/fixed-top.html.twig" %}
</div>
{% endblock %}

<div id="notification-flash-messages" class="pt-3 mt-5 position-absolute top-0 z-2 w-100">
    {% embed "_notification/flash/messages.flash.html.twig" %}{% endembed %}
</div>

<div class="position-relative z-0">
{% block content %}
{% endblock %}
</div>

<div class="position-relative z-0">
{% block footer %}
    {% include 'landing-page/components/sections/footer/standard.html.twig' %}
{% endblock %}
</div>

<div aria-live="polite" aria-atomic="true" class="z-3">
    <div id="toast-list" class="toast-container top-0 end-0 p-3 mt-5">

    </div>
</div>

<div id="toast-template" class="d-none">
    <div class="toast rounded-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">{{ '{{title}}' }}</strong>
            <small class="text-body-secondary">{{ '{{dateTime}}' }}</small>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body bg-opacity-100 opacity-100">
            {{ '{{body}}' }}
        </div>
    </div>
</div>

{##}
{##}
{##}

<script src="{{ absolute_url(asset('js/bootstrap.bundle.min.js', 'bootstrap')) }}"></script>
<script src="{{ absolute_url(asset('jquery-3.7.1.min.js', 'js')) }}"></script>
<script src="{{ absolute_url(asset('use-bootstrap-tag.min.js', 'js')) }}"></script>
<script src="{{ absolute_url(asset('highlight.min.js', 'js')) }}"></script>

<script>
    function array_unique(arr) {
        return arr.filter(function (v, i, self) {
            return i === self.indexOf(v);
        });
    }

    function toastShow(data) {
        const html = $("#toast-template").html()
            .replace("{{ '{{title}}' }}", data.title)
            .replace("{{ '{{dateTime}}' }}", data.dateTime)
            .replace("{{ '{{body}}' }}", data.message)
        ;

        const toastObj = $(html);

        $("#toast-list").append(toastObj);
        const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastObj);
        toastBootstrap.show();
    }

    function toastServerError(response) {
        const data = $.parseJSON(response.responseText);
        const dateTime = new Date(data.time);
        const formattedDate = `${dateTime.getDate()}-${dateTime.getMonth() + 1}-${dateTime.getFullYear()} ${dateTime.getHours()}:${dateTime.getMinutes()}`;

        toastShow({
            'dateTime': formattedDate,
            'message': data.message,
            'title': 'Fail',
        });
    }

    function printTheJSONInPrettyFormat(json) {
        return JSON.stringify(JSON.parse(json), undefined, 4);
    }

    const alerts = document.querySelectorAll(".alert")

    alerts && alerts.forEach((e) => e.addEventListener('click', function (e) {
        e.preventDefault();
        e.target.remove();
    }));

    document.addEventListener('DOMContentLoaded', (event) => {
        const codeJson = document.querySelectorAll("code.language-json");
        const inputTags = document.querySelectorAll(".input-tags");

        codeJson && codeJson.forEach((el) => {
            el.innerHTML = printTheJSONInPrettyFormat(el.innerHTML);
        });

        inputTags && inputTags.forEach((el) => {
            UseBootstrapTag(el);
        });
    })

    // prettify code json
    hljs.highlightAll();
</script>

{% block scriptsbottom %}
{% endblock %}

</body>
</html>
